<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	
	
	<mx:Script>
		<![CDATA[
			import bean.FilialBean;
			import bean.UsuarioBean;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			import mx.validators.Validator;
			
			import util.ProgressBarHelper;
			private var myValidators: Array;
			private var urlLogin:String;
			
			private var comboFilial: ArrayCollection = new ArrayCollection();		
			
			public function init(urlLogin:String):void{
				this.urlLogin = urlLogin;
				serviceController.findAllOrcamentistaUsuario();
			}
			public function gerarReport():void{
				var uv:URLVariables = new URLVariables();
				if(differenceBetweenDates(DateField.stringToDate(dataInicial.text, "DD/MM/YYYY"), DateField.stringToDate(dataFinal.text, "DD/MM/YYYY")) > 29){
					Alert.show("A diferença entre as datas não pode ser superior a 30 dias!", "Alerta");
					return;
				}
				if(DateField.stringToDate(dataInicial.text, "DD/MM/YYYY").getTime() >= DateField.stringToDate(dataFinal.text, "DD/MM/YYYY").getTime()){
					Alert.show("A data inicial é menor ou igual a data final!", "Alerta");
					return;
				}
				var orc:String = findOrcamentista(); 
				if(orc.length == 0){
					Alert.show("Selecione um orçamentista!", "Alerta");
					return;
				}
				uv.orcamentista = orc;
				uv.beginDate = dataInicial.text;
				uv.endDate = dataFinal.text;
				/* if(idFilial.selectedItem == null) {
					uv.idFilial = -1;
				} else {
					uv.idFilial = idFilial.selectedItem.stno;
				} */
				generatePDF(uv);
			}
			
			private function differenceBetweenDates(date1:Date, date2:Date):Number{
				var MS_PER_DAY:uint = 1000 * 60 * 60 * 24;
				var tempDate:Date = new Date(date2.time - date1.time);
				var difference:Number = 
					Math.abs(Math.round((tempDate.time / MS_PER_DAY)));
				return difference;
			}
			
			private var urlReport:String = "";
			public function generatePDF(uv:URLVariables):void
			{				
				var url:URLRequest = new URLRequest("IndicadorOrcamentista");
				url.method = "GET";
				url.data = uv;
				navigateToURL(url,"_blank");
			}
			
			private function onResultOrcamentistaUsuario(event:ResultEvent):void{
				orcamentistaList.dataProvider = ArrayCollection(event.result);
			}
			private function findOrcamentista():String{
				var orcList:ArrayCollection = ArrayCollection(orcamentistaList.dataProvider);
				var orcamentista:String = "";
				for(var i:int = 0; i < orcList.length; i++){
					var usuBean:UsuarioBean = UsuarioBean(orcList.getItemAt(i));
					if(usuBean.isSelected){
						orcamentista += "'"+usuBean.matricula+"',";
					}
				}
				if(orcamentista.length > 0){
					orcamentista = orcamentista.substr(0, orcamentista.length-1);
				}
				return orcamentista;
			}
	
		]]>
	</mx:Script>
	<mx:RemoteObject destination="service" invoke="{ProgressBarHelper.openProgressBar(this)}" id="serviceController" showBusyCursor="true" fault="{ProgressBarHelper.erro(event,urlLogin);ProgressBarHelper.removeProgressBar();}">
		<mx:method name="findAllOrcamentistaUsuario" result="onResultOrcamentistaUsuario(event);ProgressBarHelper.removeProgressBar()" />
	</mx:RemoteObject>
	
	<mx:ApplicationControlBar width="100%" horizontalAlign="center">
		<mx:Label text="Relatório de Indicadores de Orçamentista" fontWeight="bold"/>
	</mx:ApplicationControlBar>
	
	<mx:VBox  width="100%" y="60" horizontalAlign="center" height="100%">
		<mx:HBox id="datas" visible="true" width="100%" horizontalAlign="center">
			<mx:Label text="Data Início" />
			<mx:DateField id="dataInicial" editable="true" formatString="DD/MM/YYYY"/>
			<mx:Label text="Data Fim"/>
			<mx:DateField id="dataFinal" editable="true" formatString="DD/MM/YYYY"/>
		</mx:HBox>
		<mx:FormItem label="Orçamentistas" >
		<mx:List id="orcamentistaList" labelField="nome" alternatingItemColors="[#EEEEEE, white]" rowCount="10" >
			<mx:itemRenderer>
				<mx:Component>
					<mx:CheckBox selectedField="isSelected"
								 change="onChange(event);" selected="{data.isSelected}">
						<mx:Script>
							<![CDATA[
								private function onChange(evt:Event):void {
									data.isSelected = this.selected;
								}
							]]>
						</mx:Script>
					</mx:CheckBox>
				</mx:Component>
			</mx:itemRenderer>
		</mx:List>
		</mx:FormItem>
		<mx:Button label="Gerar" click="gerarReport()"/>
	</mx:VBox>
	
</mx:Canvas>
