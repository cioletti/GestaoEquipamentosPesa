<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import bean.ModeloBean;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import util.ProgressBarHelper;
			private var myValidators: Array;
			private var modeloBean: ModeloBean = new ModeloBean();
			private var urlLogin:String;
			
			public function init(urlLogin:String): void{
				this.urlLogin = urlLogin;
				gridModelo.addEventListener("EXCLUIRMODELO", removerModelo);
				myValidators = new Array();
				myValidators.push(campoModelo);				
			}
			
			private function onResultFindAllModelo(event:ResultEvent): void{
				gridModelo.dataProvider = ArrayCollection(event.result);
			}
			
			private function salvarModelo(): void{
				var validatorErrorArray: Array = Validator.validateAll(myValidators);;
				var isValidForm: Boolean = validatorErrorArray.length == 0;
				
				if (isValidForm) {
					modeloBean.descricao = modeloText.text;
					serviceController.salvarModelo(modeloBean);
				} else {
					var err: ValidationResultEvent;
					var errorMessageArray: Array = [];
					for each (err in validatorErrorArray) {
						var errField: String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": Este campo é obrigatório.");
					}
					Alert.show(errorMessageArray.join("\n\n"), "Formulário Inválido", Alert.OK);
				}
			}
			
			private function onResultSalvarModelo(event:ResultEvent): void{
				if(event.result != null){
					modeloBean = ModeloBean(event.result);
					Alert.show("Transação realizada com sucesso.");
					init(urlLogin);
				}else{
					Alert.show("Ocorreu um erro ao salvar Modelo!");
				}
			}
			
			private function removerModelo(ev: Event): void{
				Alert.yesLabel = "Sim";
				Alert.noLabel = "Não";
				Alert.show("Deseja realmente apagar?", "Apagar", 3, this, alertClickHandler);
				
			}
			
			private function alertClickHandler(event:CloseEvent):void {
				if (event.detail==Alert.YES) {
					modeloBean = ModeloBean(gridModelo.selectedItem);
					serviceController.removerModelo(modeloBean);	
				}
			}
			
			private function onResultRemoverModelo(event: ResultEvent): void{
				if(Boolean(event.result) == true){
					Alert.show("Modelo excluído com sucesso.");
					limparCampos();
					serviceController.findAllModelos(modeloPesquisa.text);
				}else{
					Alert.show("Ocorreu um erro ao excluir Modelo!");
				}
			}
			
			private function gridDoubleClick(): void{
				if(gridModelo.selectedIndex != -1) {
					modeloBean = ModeloBean(gridModelo.selectedItem);
					modeloText.text = modeloBean.descricao;
				}
			}			
			
			private function limparCampos(): void{
				modeloBean = new ModeloBean();
				modeloText.text = "";
			}
			
			private function novo(): void{
				limparCampos();
				modeloText.setFocus();
			}
			
			
			protected function modelo_clickHandler(event:MouseEvent):void
			{
				serviceController.findAllModelos(modeloPesquisa.text);
			}
			protected function button1_clickHandler(event:MouseEvent):void
			{
				this.limparCampos();
			}
			
		]]>
	</mx:Script>
	<mx:StringValidator id="campoModelo" requiredFieldError="Este campo é obrigatório!" required="true" source="{modeloText}" property="text" />
	<mx:RemoteObject destination="service" invoke="{ProgressBarHelper.openProgressBar(this)}" id="serviceController" showBusyCursor="true" fault="ProgressBarHelper.erro(event, urlLogin);ProgressBarHelper.removeProgressBar()">
		<mx:method name="findAllModelo" result="onResultFindAllModelo(event);ProgressBarHelper.removeProgressBar()"/>	
		<mx:method name="findAllModelos" result="onResultFindAllModelo(event);ProgressBarHelper.removeProgressBar()"/>	
		<mx:method name="salvarModelo" result="onResultSalvarModelo(event);ProgressBarHelper.removeProgressBar()"/>
		<mx:method name="removerModelo" result="onResultRemoverModelo(event);ProgressBarHelper.removeProgressBar()"/>
	</mx:RemoteObject>
	<mx:ApplicationControlBar 
		x="0" y="0"  width="100%" horizontalAlign="center">
		<mx:Label text="Modelo" fontWeight="bold"/>
	</mx:ApplicationControlBar>
	<mx:HBox x="0" y="62" width="100%" horizontalAlign="center">
		<mx:HBox width="100%" horizontalAlign="center">
			<mx:Form>
				<mx:FormItem label="Modelo" required="true">
					<mx:TextInput id="modeloText"/>
				</mx:FormItem>
				<mx:HBox>
					<mx:Button label="Salvar" click="salvarModelo()"/>
					<mx:Button label="Novo" click="button1_clickHandler(event)"/>
				</mx:HBox>
			</mx:Form>
		</mx:HBox>
	</mx:HBox>
	<mx:DataGrid x="0" y="186" width="100%" height="472" id="gridModelo">
		<mx:columns>
			<mx:DataGridColumn headerText="Modelo" dataField="descricao"/>
			<mx:DataGridColumn headerText="Excluir" dataField="excluir">
				<mx:itemRenderer>
					<mx:Component>
						<mx:VBox verticalGap="2" horizontalAlign="center">
							<mx:Image source="img/remover.png" width="15" buttonMode="true" height="15"  click="{dispatchEvent(new Event('EXCLUIRMODELO', true)) }" />
						</mx:VBox>
					</mx:Component> 	
				</mx:itemRenderer>
			</mx:DataGridColumn>	
		</mx:columns>
	</mx:DataGrid>
	<mx:HBox x="34" y="152" width="1454">
		<mx:Label text="Modelo"/>
		<mx:TextInput id="modeloPesquisa"/>
		<mx:Button label="Pesquisar" id="modeloPesquisaButton" click="modelo_clickHandler(event)"/>
	</mx:HBox>
	
</mx:Canvas>
