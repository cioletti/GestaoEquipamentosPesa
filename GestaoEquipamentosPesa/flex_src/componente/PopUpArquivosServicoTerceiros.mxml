<?xml version="1.0" encoding="utf-8"?>
<ModuleTitleWindow  xmlns="util.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="600" height="250" alpha="0.97" cornerRadius="4">
	<mx:Script>
		<![CDATA[
			import bean.BibliografiaBean;
			import bean.ServicoTerceirosBean;
			import bean.CheckinBean;
			import bean.FotosBean;
			import bean.SegmentoBean;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import util.ProgressBarHelper;
			
			private var fotos: FotosBean = new FotosBean();
			
			private var uploadFile: FileReference;
			private var filtro:FileFilter = new FileFilter("Selecione a Foto(*.jpg;)", "*.jpg;");
			private var urlReport:String;
			private var urlLogin:String;
			private var  servicoTerceiros:ServicoTerceirosBean;
			
			private function erro(event: FaultEvent): void{
				Alert.show(""+event);
			}
			
		
			public function init(urlLogin:String, servicoTerceiros:ServicoTerceirosBean): void{
				this.servicoTerceiros = servicoTerceiros;
 				serviceController.findAllArquivos(servicoTerceiros);
			}
			
			//Métodos de UPLOAD
			
			private function onResultFindAllArquivos(event: ResultEvent): void{
				gridArquivos.dataProvider = ArrayCollection(event.result);
				serviceController.getUrlReport();
			}
			
//			private function removerArquivo(ev: Event): void{
//				Alert.yesLabel = "Sim";
//				Alert.noLabel = "Não";
//				Alert.show("Deseja realmente excluir anexo?", "Alerta", 3, this, alertClickHandler);
//			}

//			private function alertClickHandler(event:CloseEvent):void {
//				if (event.detail==Alert.YES) {
//					var nomeArquivo: String;
//					nomeArquivo = String(gridFotos.selectedItem);
//					serviceController.removerArquivoBibliografia(fotos, nomeArquivo);	
//				}
//			}
//			
		
			
			
			private function resultGetUrlReport(event:ResultEvent):void{
				this.urlReport = event.result as String;
			}
			
			private function downloadArquivo():void{
				if(gridArquivos.selectedItem == null){
					return;
				}else{
					var uv:URLVariables = new URLVariables();
					uv.pastaArquivos =servicoTerceiros.idSegmento+"_"+servicoTerceiros.idTipoServicoTerceiros;
					uv.nomeArquivo = String(gridArquivos.selectedItem);
					var url:URLRequest = new URLRequest(urlReport+"/ArquivosServicoTerceiros");
					url.method = "POST";
					url.data = uv;
					navigateToURL(url,"_blank");
			}
			}
			
			private function fechar(){
			this.close();
			}
	
		]]>
	</mx:Script>

	<mx:RemoteObject destination="service" invoke="{ProgressBarHelper.openProgressBar(this)}" id="serviceController" showBusyCursor="true" fault="erro(event);ProgressBarHelper.removeProgressBar()">
		<mx:method name="findAllArquivos" result="onResultFindAllArquivos(event);ProgressBarHelper.removeProgressBar()"/>	
		<mx:method name="getUrlReport" result="resultGetUrlReport(event);ProgressBarHelper.removeProgressBar()"/>	
	</mx:RemoteObject>
	
	<mx:Resize id="resizeEffect" duration="1000"/>
	<mx:Canvas width="100%" height="100%" resizeEffect="resizeEffect" id="osCanvas" x="0" y="85" xmlns:util="util.*">
		<mx:DataGrid id="gridArquivos" height="176" width="100%" doubleClickEnabled="true" doubleClick="downloadArquivo()">
			<mx:columns>
				<mx:DataGridColumn dataField="" id="anexo" headerText="Arquivos" textAlign="left" sortable="false"/>
			</mx:columns>
		</mx:DataGrid>
	
	</mx:Canvas>
	<mx:HBox horizontalAlign="center" verticalAlign="middle" width="100%">
		<mx:Button label="Fechar" click="fechar()"/>
	</mx:HBox>
</ModuleTitleWindow>