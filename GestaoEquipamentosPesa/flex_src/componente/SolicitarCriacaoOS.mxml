<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">

	<mx:Script>
		<![CDATA[
			import bean.GeFormularioAprovacaoOsBean;
			import bean.UsuarioBean;
			
			import com.google.maps.services.ServiceStatus;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import util.ProgressBarHelper;
			private var urlLogin:String;
			public var usuarioBean:UsuarioBean;
			
			public function init(urlLogin:String, usuarioBean:UsuarioBean):void{
				this.usuarioBean = usuarioBean;
				serviceController.findFormularioAprovarOs(campoPesquisa.text);
				
				formulario.addEventListener("VISUALIZAR", visualizarSolicitacao);
				formulario.addEventListener("REMOVER", removerSolicitacao);
			}
			
			private function removerSolicitacao(ev: Event): void{
				serviceController.removerFormularioAprovarOsById(GeFormularioAprovacaoOsBean(formulario.selectedItem).id)
			}
			
			private function visualizarSolicitacao(ev: Event): void{
				var beanForm:GeFormularioAprovacaoOsBean = GeFormularioAprovacaoOsBean(formulario.selectedItem);
				if(beanForm.tipoSolicitacao == 'G'){
					var popUpAprovarOs:FormularioGarantia = new FormularioGarantia();				
					popUpAprovarOs.addEventListener(CloseEvent.CLOSE, removeoPopUp);
					PopUpManager.addPopUp(popUpAprovarOs, this, true);
					PopUpManager.centerPopUp(popUpAprovarOs);
					popUpAprovarOs.init2(urlLogin,this.usuarioBean, beanForm, false, beanForm.tipoSistema);
				}
		
				if(beanForm.tipoSolicitacao == 'GGG' || beanForm.tipoSolicitacao == 'AGU'){
					var popUpUsada:FormularioGarantiaMaquinaUsada = new FormularioGarantiaMaquinaUsada();				
					popUpUsada.addEventListener(CloseEvent.CLOSE, removeoPopUp);
					PopUpManager.addPopUp(popUpUsada, this, true);
					PopUpManager.centerPopUp(popUpUsada);
					popUpUsada.init2(urlLogin,this.usuarioBean, beanForm, false, beanForm.tipoSistema);
				}
				if(beanForm.tipoSolicitacao == 'C'){
					var popUpFormConOs:FormularioConcessao = new FormularioConcessao();				
					popUpFormConOs.addEventListener(CloseEvent.CLOSE, removeoPopUp);
					PopUpManager.addPopUp(popUpFormConOs, this, true);
					PopUpManager.centerPopUp(popUpFormConOs);
					popUpFormConOs.init2(urlLogin,this.usuarioBean, beanForm, false, beanForm.tipoSistema);
				}
				if(beanForm.tipoSolicitacao == 'R' || beanForm.tipoSolicitacao == 'E' || beanForm.tipoSolicitacao == 'GG' || beanForm.tipoSolicitacao == 'CC' || beanForm.tipoSolicitacao == 'AG'){
					var popUpFormRent:FormularioClienteExternoRental = new FormularioClienteExternoRental();				
					popUpFormRent.addEventListener(CloseEvent.CLOSE, removeoPopUp);
					PopUpManager.addPopUp(popUpFormRent, this, true);
					PopUpManager.centerPopUp(popUpFormRent);
					popUpFormRent.init2(urlLogin,this.usuarioBean, beanForm, false, beanForm.tipoSistema);
				}
			}
			
			private function removeoPopUp(obj:CloseEvent):void{
				PopUpManager.removePopUp(obj.currentTarget as IFlexDisplayObject);
				serviceController.findFormularioAprovarOs(campoPesquisa.text);
			}
			private function onResultFindFormularioAprovarOs(ev:ResultEvent):void{
				formulario.dataProvider = ArrayCollection(ev.result);
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				var popUpAprovarOs:PopupSolicitarCriacaoOS = new PopupSolicitarCriacaoOS();				
				popUpAprovarOs.addEventListener(CloseEvent.CLOSE, removeoAprovarPopUp);
				PopUpManager.addPopUp(popUpAprovarOs, this, true);
				PopUpManager.centerPopUp(popUpAprovarOs);
				popUpAprovarOs.init(urlLogin, this.usuarioBean);	
			}
			
			private function removeoAprovarPopUp(obj:CloseEvent):void{
				PopUpManager.removePopUp(obj.currentTarget as IFlexDisplayObject);
				serviceController.findFormularioAprovarOs(campoPesquisa.text);
			}

			protected function button2_clickHandler(event:MouseEvent):void
			{
				serviceController.findFormularioAprovarOs(campoPesquisa.text);
			}
			private function onResultRemoverFormularioAprovarOsById(ev:ResultEvent):void{
				if(Boolean(ev.result) == true){
					Alert.show("Solicitação removida com sucesso!","Alerta");
					serviceController.findFormularioAprovarOs(campoPesquisa.text);
				}else{
					Alert.show("Não foi posssível remover solicitação!","Alerta");
				}
			}
		]]>
	</mx:Script>

	<mx:RemoteObject destination="service" invoke="{ProgressBarHelper.openProgressBar(this)}" id="serviceController" showBusyCursor="true" fault="ProgressBarHelper.erro(event, urlLogin);ProgressBarHelper.removeProgressBar()">
		<mx:method name="findFormularioAprovarOs" result="onResultFindFormularioAprovarOs(event);ProgressBarHelper.removeProgressBar()"/>
		<mx:method name="removerFormularioAprovarOsById" result="onResultRemoverFormularioAprovarOsById(event)"/>
		
	</mx:RemoteObject>
	
	<mx:ApplicationControlBar width="100%" horizontalAlign="center">
		<mx:Label text="Solicitar Criação de OS" fontWeight="bold"/>
	</mx:ApplicationControlBar>
	<mx:DataGrid x="0" y="67" width="100%" height="100%" id="formulario">
		<mx:columns>
			<mx:DataGridColumn headerText="Código Solicitação" dataField="id"/>
			<mx:DataGridColumn headerText="Num. OS" dataField="numOs"/>
			<mx:DataGridColumn headerText="Data Criação" dataField="dataCriacao"/>
			<mx:DataGridColumn headerText="Responsável" dataField="responsavel"/>
			<mx:DataGridColumn headerText="Código Cliente" dataField="codigoCliente"/>
			<mx:DataGridColumn headerText="Cliente" dataField="cliente"/>
			<mx:DataGridColumn headerText="Série" dataField="serie"/>
			<mx:DataGridColumn headerText="Modelo" dataField="modelo"/>
			<mx:DataGridColumn headerText="Filial Criação OS" dataField="nomeFilial"/>
			<mx:DataGridColumn headerText="Status" dataField="status"/>
			<mx:DataGridColumn headerText="Sistema" dataField="tipoSistema"/>
			<mx:DataGridColumn headerText="Maq. Parada" dataField="maquinaParou"/>
			<mx:DataGridColumn headerText="Func. Aprovador" width="200">
				<mx:itemRenderer>
					<mx:Component>
						<mx:VBox verticalGap="2" horizontalAlign="center">
							<mx:TextArea text="{data.funcAprovador}"/>
						</mx:VBox>
					</mx:Component> 	
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn headerText="Observação" width="200">
				<mx:itemRenderer>
					<mx:Component>
						<mx:VBox verticalGap="2" horizontalAlign="center">
							<mx:TextArea text="{data.obsRejeicao}"/>
						</mx:VBox>
					</mx:Component> 	
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn headerText="Ações">
			<mx:itemRenderer>
				<mx:Component>
					<mx:HBox verticalGap="2" horizontalAlign="center">
						<mx:Image source="img/information.png" width="15" buttonMode="true" height="15" toolTip="Clique para: Visualizar Solicitação." click="{dispatchEvent(new Event('VISUALIZAR', true)) }" />
						<mx:Image source="img/remover.png" width="15" buttonMode="true" height="15" toolTip="Clique para: Remover Solicitação." click="{dispatchEvent(new Event('REMOVER', true)) }" />
					</mx:HBox>
				</mx:Component> 	
			</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<mx:Button x="222" y="38" label="Pesquisar" click="button2_clickHandler(event)"/>
	<mx:TextInput x="22" y="38" id="campoPesquisa" toolTip="Insira o código do cliente, cliente, série ou número de OS."/>
	<mx:Button x="338" y="38" label="Solicitar Criar OS" click="button1_clickHandler(event)"/>
	
</mx:Canvas>
