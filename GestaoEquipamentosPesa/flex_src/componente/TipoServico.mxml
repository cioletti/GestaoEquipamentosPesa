<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" >
	
	
	<mx:Script>
		<![CDATA[
			import bean.RegraDeNegocioBean;
			import bean.TipoServicoBean;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ValidationResultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.validators.Validator;
			
			import util.ProgressBarHelper;
			private var urlLogin:String;
			private var myValidators:Array;
			private var tp:TipoServicoBean = new TipoServicoBean();
			
			public function init(urlLogin:String):void{
				gridTP.addEventListener("REMOVERTP", removerTP);
				
				myValidators = new Array();
				myValidators.push(campoDescricao);
				this.urlLogin = urlLogin;
				serviceController.findAllServicoTerceiros();
			}
			
			private function removerTP(ev: Event): void{
				serviceController.remover(gridTP.selectedItem.id);
			}
			
			private function onResultFindAllServicoTerceiros(event:ResultEvent):void{
				gridTP.dataProvider = ArrayCollection(event.result);
			}
			
			private function onResultRemover(event:ResultEvent):void{
				if(Boolean(event.result) == true){
					var grid:ArrayCollection = ArrayCollection(gridTP.dataProvider);
					grid.removeItemAt(gridTP.selectedIndex);
					novaTP();
					return;
				}
				Alert.show("Não foi possível remover Tipo de Serviço!", "Alerta");
			}
			
			private function onResultSaveOrUpdate(event:ResultEvent):void{
				tp = TipoServicoBean(event.result);
				if(tp != null){
					Alert.show("Transação realizada com sucesso!", "Alerta");
					serviceController.findAllServicoTerceiros();
					return;
				}
				Alert.show("Erro ao salvar Tipo de Serviço!", "Alerta");
			}
			
					
			
			private function saveOrUpdate():void{
				var validatorErrorArray:Array = Validator.validateAll(myValidators);;
				var isValidForm:Boolean = validatorErrorArray.length == 0;
				
				if (isValidForm) {
					tp.descricao = descricao.text;
					serviceController.saveOrUpdate(tp);
				}else {
					var err:ValidationResultEvent;
					var errorMessageArray:Array = [];
					for each (err in validatorErrorArray) {
						var errField:String = FormItem(err.currentTarget.source.parent).label
						errorMessageArray.push(errField + ": Este campo é obrigatório.");
					}
					Alert.show(errorMessageArray.join("\n\n"), "Invalid form...", Alert.OK);
				}
			}
			
			public function novaTP():void{
				descricao.text = "";
				
				tp = new TipoServicoBean();
			}
			
			private function doubleClickGrid():void{
				tp = TipoServicoBean(gridTP.selectedItem);
				descricao.text = tp.descricao;
			}
		]]>
	</mx:Script>
	
	
	<mx:StringValidator id="campoDescricao" requiredFieldError="Este campo é obrigatório!" required="true" source="{descricao}" property="text" />
	<mx:RemoteObject destination="service" invoke="{ProgressBarHelper.openProgressBar(this)}" id="serviceController" showBusyCursor="true" fault="{ProgressBarHelper.erro(event,urlLogin);ProgressBarHelper.removeProgressBar();}">
		<mx:method name="findAllServicoTerceiros" result="onResultFindAllServicoTerceiros(event);ProgressBarHelper.removeProgressBar()" />
		<mx:method name="saveOrUpdate" result="onResultSaveOrUpdate(event);ProgressBarHelper.removeProgressBar()" />
		<mx:method name="remover" result="onResultRemover(event);ProgressBarHelper.removeProgressBar()" />
	</mx:RemoteObject>
	<mx:ApplicationControlBar x="0" y="0"  width="100%" horizontalAlign="center">
		<mx:Label text="Tipo de Serviço" fontWeight="bold"/>
	</mx:ApplicationControlBar>
	<mx:VBox x="0" y="49" width="100%" horizontalAlign="center" verticalAlign="middle" paddingBottom="3" paddingTop="3">
		<mx:FormItem label="Descricao" required="true" width="259">
			<mx:TextInput id="descricao"/>
		</mx:FormItem>
		
		
		<mx:HBox width="100%" horizontalAlign="center">
			<mx:Button label="Salvar" click="saveOrUpdate()"/>
			<mx:Button label="novo" click="novaTP()"/>
		</mx:HBox>
	</mx:VBox>
	<!--mx:HBox x="10" y="141" width="100%">
		<mx:FormItem label="Filial" required="true" width="259">
			<mx:TextInput id="filialPesquisar"/>
		</mx:FormItem>
		<mx:Button label="Pesquisar" click="findRegraDeNegocioByFilial()"/>
	</mx:HBox-->
	<mx:VBox x="0" y="170" width="100%" height="100%" paddingBottom="10" paddingLeft="3" paddingRight="3" paddingTop="2">
		<mx:DataGrid width="100%" height="352" id="gridTP" doubleClick="doubleClickGrid()" doubleClickEnabled="true">
			<mx:columns>
				<mx:DataGridColumn headerText="Tipo Serviço" dataField="descricao"/>
				<mx:DataGridColumn headerText="Excluir">
					<mx:itemRenderer> 
						<mx:Component>
							<mx:VBox verticalGap="2" horizontalAlign="center">
								<mx:Image source="img/remover.png" width="15" buttonMode="true" height="15" click="{dispatchEvent(new Event('REMOVERTP', true))}"/>
							</mx:VBox>
						</mx:Component> 
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
	
	
</mx:Canvas>
